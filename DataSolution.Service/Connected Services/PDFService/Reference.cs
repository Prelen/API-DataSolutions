//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataSolution.Service.PDFService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientRequestProcess", Namespace="http://schemas.datacontract.org/2004/07/TUDirectReportServiceLogic.Processing")]
    [System.SerializableAttribute()]
    public partial class ClientRequestProcess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HttpLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PDFBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HttpLink {
            get {
                return this.HttpLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.HttpLinkField, value) != true)) {
                    this.HttpLinkField = value;
                    this.RaisePropertyChanged("HttpLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PDFBytes {
            get {
                return this.PDFBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFBytesField, value) != true)) {
                    this.PDFBytesField = value;
                    this.RaisePropertyChanged("PDFBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportCode {
            get {
                return this.ReportCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportCodeField, value) != true)) {
                    this.ReportCodeField = value;
                    this.RaisePropertyChanged("ReportCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestHistory", Namespace="http://schemas.datacontract.org/2004/07/TUDirectReportServiceLogic.Processing")]
    [System.SerializableAttribute()]
    public partial class RequestHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingTicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HttpRequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestedTicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingTicket {
            get {
                return this.BillingTicketField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingTicketField, value) != true)) {
                    this.BillingTicketField = value;
                    this.RaisePropertyChanged("BillingTicket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedDateField, value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiryDateField, value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HttpRequest {
            get {
                return this.HttpRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.HttpRequestField, value) != true)) {
                    this.HttpRequestField = value;
                    this.RaisePropertyChanged("HttpRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSuccessField, value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTypeField, value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestedTicket {
            get {
                return this.RequestedTicketField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedTicketField, value) != true)) {
                    this.RequestedTicketField = value;
                    this.RaisePropertyChanged("RequestedTicket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectName {
            get {
                return this.SubjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectNameField, value) != true)) {
                    this.SubjectNameField = value;
                    this.RaisePropertyChanged("SubjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectNo {
            get {
                return this.SubjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectNoField, value) != true)) {
                    this.SubjectNoField = value;
                    this.RaisePropertyChanged("SubjectNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientResultProcess", Namespace="http://schemas.datacontract.org/2004/07/TUDirectReportServiceLogic.Processing")]
    [System.SerializableAttribute()]
    public partial class ClientResultProcess : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PDFBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDFNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PDFBytes {
            get {
                return this.PDFBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFBytesField, value) != true)) {
                    this.PDFBytesField = value;
                    this.RaisePropertyChanged("PDFBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDFName {
            get {
                return this.PDFNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFNameField, value) != true)) {
                    this.PDFNameField = value;
                    this.RaisePropertyChanged("PDFName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PDFService.IReportRequestService")]
    public interface IReportRequestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportRequestService/RequestReportLink", ReplyAction="http://tempuri.org/IReportRequestService/RequestReportLinkResponse")]
        DataSolution.Service.PDFService.ClientRequestProcess RequestReportLink(string SubscriberNo, string MFSecCode, string UserName, string UserEmail, string Ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportRequestService/RequestReportLink", ReplyAction="http://tempuri.org/IReportRequestService/RequestReportLinkResponse")]
        System.Threading.Tasks.Task<DataSolution.Service.PDFService.ClientRequestProcess> RequestReportLinkAsync(string SubscriberNo, string MFSecCode, string UserName, string UserEmail, string Ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportRequestService/RequestReportBytes", ReplyAction="http://tempuri.org/IReportRequestService/RequestReportBytesResponse")]
        DataSolution.Service.PDFService.ClientRequestProcess RequestReportBytes(string SubscriberNo, string MFSecCode, string UserName, string UserEmail, string Ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportRequestService/RequestReportBytes", ReplyAction="http://tempuri.org/IReportRequestService/RequestReportBytesResponse")]
        System.Threading.Tasks.Task<DataSolution.Service.PDFService.ClientRequestProcess> RequestReportBytesAsync(string SubscriberNo, string MFSecCode, string UserName, string UserEmail, string Ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportRequestService/RequestHistoryList", ReplyAction="http://tempuri.org/IReportRequestService/RequestHistoryListResponse")]
        DataSolution.Service.PDFService.RequestHistory[] RequestHistoryList(string SubscriberNo, string UserEmail, string MFSecCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportRequestService/RequestHistoryList", ReplyAction="http://tempuri.org/IReportRequestService/RequestHistoryListResponse")]
        System.Threading.Tasks.Task<DataSolution.Service.PDFService.RequestHistory[]> RequestHistoryListAsync(string SubscriberNo, string UserEmail, string MFSecCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportRequestService/PDFReportResultProcess", ReplyAction="http://tempuri.org/IReportRequestService/PDFReportResultProcessResponse")]
        DataSolution.Service.PDFService.ClientResultProcess PDFReportResultProcess(string ReportCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportRequestService/PDFReportResultProcess", ReplyAction="http://tempuri.org/IReportRequestService/PDFReportResultProcessResponse")]
        System.Threading.Tasks.Task<DataSolution.Service.PDFService.ClientResultProcess> PDFReportResultProcessAsync(string ReportCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportRequestServiceChannel : DataSolution.Service.PDFService.IReportRequestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportRequestServiceClient : System.ServiceModel.ClientBase<DataSolution.Service.PDFService.IReportRequestService>, DataSolution.Service.PDFService.IReportRequestService {
        
        public ReportRequestServiceClient() {
        }
        
        public ReportRequestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportRequestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportRequestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportRequestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataSolution.Service.PDFService.ClientRequestProcess RequestReportLink(string SubscriberNo, string MFSecCode, string UserName, string UserEmail, string Ticket) {
            return base.Channel.RequestReportLink(SubscriberNo, MFSecCode, UserName, UserEmail, Ticket);
        }
        
        public System.Threading.Tasks.Task<DataSolution.Service.PDFService.ClientRequestProcess> RequestReportLinkAsync(string SubscriberNo, string MFSecCode, string UserName, string UserEmail, string Ticket) {
            return base.Channel.RequestReportLinkAsync(SubscriberNo, MFSecCode, UserName, UserEmail, Ticket);
        }
        
        public DataSolution.Service.PDFService.ClientRequestProcess RequestReportBytes(string SubscriberNo, string MFSecCode, string UserName, string UserEmail, string Ticket) {
            return base.Channel.RequestReportBytes(SubscriberNo, MFSecCode, UserName, UserEmail, Ticket);
        }
        
        public System.Threading.Tasks.Task<DataSolution.Service.PDFService.ClientRequestProcess> RequestReportBytesAsync(string SubscriberNo, string MFSecCode, string UserName, string UserEmail, string Ticket) {
            return base.Channel.RequestReportBytesAsync(SubscriberNo, MFSecCode, UserName, UserEmail, Ticket);
        }
        
        public DataSolution.Service.PDFService.RequestHistory[] RequestHistoryList(string SubscriberNo, string UserEmail, string MFSecCode) {
            return base.Channel.RequestHistoryList(SubscriberNo, UserEmail, MFSecCode);
        }
        
        public System.Threading.Tasks.Task<DataSolution.Service.PDFService.RequestHistory[]> RequestHistoryListAsync(string SubscriberNo, string UserEmail, string MFSecCode) {
            return base.Channel.RequestHistoryListAsync(SubscriberNo, UserEmail, MFSecCode);
        }
        
        public DataSolution.Service.PDFService.ClientResultProcess PDFReportResultProcess(string ReportCode) {
            return base.Channel.PDFReportResultProcess(ReportCode);
        }
        
        public System.Threading.Tasks.Task<DataSolution.Service.PDFService.ClientResultProcess> PDFReportResultProcessAsync(string ReportCode) {
            return base.Channel.PDFReportResultProcessAsync(ReportCode);
        }
    }
}
